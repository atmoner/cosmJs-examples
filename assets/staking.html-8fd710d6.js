import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,e}from"./app-1e1ed401.js";const t={},o=e(`<h1 id="bank-module" tabindex="-1"><a class="header-anchor" href="#bank-module" aria-hidden="true">#</a> Bank module</h1><h2 id="connect-rpc" tabindex="-1"><a class="header-anchor" href="#connect-rpc" aria-hidden="true">#</a> Connect rpc</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Tendermint37Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@cosmjs/tendermint-rpc&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createProtobufRpcClient<span class="token punctuation">,</span> QueryClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@cosmjs/stargate&quot;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> staking <span class="token keyword">from</span> <span class="token string">&quot;cosmjs-types/cosmos/staking/v1beta1/query&quot;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">await</span> Tendermint37Client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;{rpc_url}&#39;</span><span class="token punctuation">)</span> 
<span class="token keyword">const</span> queryClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryClient</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span>
<span class="token keyword">const</span> rpcClient <span class="token operator">=</span> <span class="token function">createProtobufRpcClient</span><span class="token punctuation">(</span>queryClient<span class="token punctuation">)</span>

<span class="token keyword">const</span> queryStaking <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">staking<span class="token punctuation">.</span>QueryClientImpl</span><span class="token punctuation">(</span>rpcClient<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validators" tabindex="-1"><a class="header-anchor" href="#validators" aria-hidden="true">#</a> Validators()</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> Validators <span class="token operator">=</span> <span class="token keyword">await</span> queryStaking<span class="token punctuation">.</span><span class="token function">Validators</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Validators<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validator" tabindex="-1"><a class="header-anchor" href="#validator" aria-hidden="true">#</a> Validator()</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> Validator <span class="token operator">=</span> <span class="token keyword">await</span> queryStaking<span class="token punctuation">.</span><span class="token function">Validator</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Validator<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validatordelegations" tabindex="-1"><a class="header-anchor" href="#validatordelegations" aria-hidden="true">#</a> ValidatorDelegations()</h2><h2 id="validatorunbondingdelegations" tabindex="-1"><a class="header-anchor" href="#validatorunbondingdelegations" aria-hidden="true">#</a> ValidatorUnbondingDelegations()</h2><h2 id="delegation" tabindex="-1"><a class="header-anchor" href="#delegation" aria-hidden="true">#</a> Delegation()</h2><h2 id="unbondingdelegation" tabindex="-1"><a class="header-anchor" href="#unbondingdelegation" aria-hidden="true">#</a> UnbondingDelegation()</h2><h2 id="delegatordelegations" tabindex="-1"><a class="header-anchor" href="#delegatordelegations" aria-hidden="true">#</a> DelegatorDelegations()</h2><h2 id="delegatorunbondingdelegations" tabindex="-1"><a class="header-anchor" href="#delegatorunbondingdelegations" aria-hidden="true">#</a> DelegatorUnbondingDelegations()</h2>`,13),i=[o];function c(p,l){return n(),s("div",null,i)}const u=a(t,[["render",c],["__file","staking.html.vue"]]);export{u as default};
